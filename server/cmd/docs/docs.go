// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Clarance Liberi Ntwari",
            "url": "https://twitter.com/claranceliberi",
            "email": "ntwaricliberi@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/agents": {
            "get": {
                "description": "Get all agents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Get all agents",
                "responses": {}
            },
            "post": {
                "description": "Add a new agent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Add a new agent",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/agents.AddAgentRequestBody"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/batteries": {
            "get": {
                "description": "Get all batteries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "batteries"
                ],
                "summary": "Get all batteries",
                "responses": {}
            },
            "post": {
                "description": "Add a new battery",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "batteries"
                ],
                "summary": "Add a new battery",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/batteries.AddBatteryRequestBody"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/battery_telematics": {
            "get": {
                "description": "Get all batteries telematics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "battery_telematics"
                ],
                "summary": "Get all batteries telematics",
                "responses": {}
            },
            "post": {
                "description": "Add a battery telematics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "battery_telematics"
                ],
                "summary": "Add a battery telematics",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/battery_telematics.AddBatteryTelematicsRequestBodyEntity"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/drivers": {
            "get": {
                "description": "Get all drivers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drivers"
                ],
                "summary": "Get all drivers",
                "responses": {}
            },
            "post": {
                "description": "Add a new driver",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drivers"
                ],
                "summary": "Add a new driver",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/drivers.AddDriverRequestBody"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/stations": {
            "get": {
                "description": "Get all stations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stations"
                ],
                "summary": "Get all stations",
                "responses": {}
            },
            "post": {
                "description": "Add a station",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stations"
                ],
                "summary": "Add a station",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/stations.AddStationsRequestBody"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/swaps": {
            "get": {
                "description": "Get all swaps",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "swaps"
                ],
                "summary": "Get all swaps",
                "responses": {}
            },
            "post": {
                "description": "Add a swap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "swaps"
                ],
                "summary": "Add a swap",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swaps.AddSwapRequestBody"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/swaps/{id}": {
            "get": {
                "description": "Get Swap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "swaps"
                ],
                "summary": "Get Swap",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the swap",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/vehicles": {
            "get": {
                "description": "Get all vehicles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicles"
                ],
                "summary": "Get all vehicles",
                "responses": {}
            },
            "post": {
                "description": "Add a new vehicle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicles"
                ],
                "summary": "Add a new vehicle",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vehicles.AddVehicleRequestBody"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "agents.AddAgentRequestBody": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "batteries.AddBatteryRequestBody": {
            "type": "object",
            "properties": {
                "identifier": {
                    "type": "string"
                },
                "last_seen_online": {
                    "type": "string"
                },
                "manufacture_date": {
                    "type": "string"
                },
                "model_name": {
                    "type": "string"
                }
            }
        },
        "battery_telematics.AddBatteryTelematicsRequestBodyEntity": {
            "type": "object",
            "properties": {
                "battery_id": {
                    "type": "number"
                },
                "battery_soc": {
                    "type": "number"
                },
                "charging": {
                    "type": "boolean"
                },
                "charging_rate": {
                    "type": "number"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                }
            }
        },
        "drivers.AddDriverRequestBody": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "stations.AddStationsRequestBody": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "swaps.AddSwapRequestBody": {
            "type": "object",
            "properties": {
                "agent": {
                    "type": "number"
                },
                "battery_in": {
                    "type": "number"
                },
                "battery_out": {
                    "type": "number"
                },
                "driver": {
                    "type": "number"
                },
                "station": {
                    "type": "number"
                },
                "vehicle": {
                    "type": "number"
                }
            }
        },
        "vehicles.AddVehicleRequestBody": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "manufacture_date": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Ampersand API",
	Description:      "This is the API for Ampersand, a car battery swapping service.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
